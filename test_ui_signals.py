#!/usr/bin/env python3
"""
–¢–µ—Å—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∏–≥–Ω–∞–ª–æ–≤
"""
import sys
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

def test_signals_page_ui():
    """–¢–µ—Å—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        from PySide6.QtWidgets import QApplication
        from ui.pages.signals_page import SignalsPage
        from core.signal_manager import SignalManager
        from core.signal_processor import SignalProcessor
        from core.signal_validator import SignalValidator
        from core.flag_manager import FlagManager
        from config.config_loader import ConfigLoader
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º QApplication
        app = QApplication(sys.argv)
        print("‚úÖ QApplication —Å–æ–∑–¥–∞–Ω")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        flag_manager = FlagManager()
        signal_processor = SignalProcessor()
        signal_validator = SignalValidator()
        signal_manager = SignalManager(
            processor=signal_processor,
            validator=signal_validator,
            flag_manager=flag_manager
        )
        config_loader = ConfigLoader()
        
        print("‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–∏–≥–Ω–∞–ª–æ–≤
        print("2. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∏–≥–Ω–∞–ª–æ–≤...")
        signals_page = SignalsPage(signal_manager, flag_manager, config_loader)
        signals_page.show()
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤
        print("3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
        test_signals = [
            ("TEMP", "temperature", "25.5"),
            ("STATUS", "device_status", "running"),
            ("ERROR", "error_code", "0"),
            ("PRESSURE", "pressure", "1.2"),
            ("MODE", "operation_mode", "auto")
        ]
        
        for signal_name, variable_name, value in test_signals:
            signals_page.on_signal_processed(signal_name, variable_name, value)
            print(f"   ‚úÖ –°–∏–≥–Ω–∞–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {signal_name} -> {variable_name} = {value}")
            time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        
        print("‚úÖ –í—Å–µ —Å–∏–≥–Ω–∞–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
        print("4. –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ 5 —Å–µ–∫—É–Ω–¥...")
        QTimer = app.__class__.processEvents
        start_time = time.time()
        
        while time.time() - start_time < 5:
            app.processEvents()
            time.sleep(0.1)
        
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UI: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_signal_config_widget():
    """–¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    try:
        from PySide6.QtWidgets import QApplication
        from ui.pages.signals_page import SignalConfigWidget
        from config.config_loader import ConfigLoader
        
        # –°–æ–∑–¥–∞–µ–º QApplication –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
        app = QApplication.instance()
        if app is None:
            app = QApplication(sys.argv)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        config_loader = ConfigLoader()
        config_widget = SignalConfigWidget(config_loader)
        config_widget.show()
        
        print("‚úÖ –í–∏–¥–∂–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
        start_time = time.time()
        while time.time() - start_time < 3:
            app.processEvents()
            time.sleep(0.1)
        
        print("‚úÖ –í–∏–¥–∂–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_signal_monitor_widget():
    """–¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    try:
        from PySide6.QtWidgets import QApplication
        from ui.pages.signals_page import SignalMonitorWidget
        from core.signal_manager import SignalManager
        from core.signal_processor import SignalProcessor
        from core.signal_validator import SignalValidator
        from core.flag_manager import FlagManager
        
        # –°–æ–∑–¥–∞–µ–º QApplication –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
        app = QApplication.instance()
        if app is None:
            app = QApplication(sys.argv)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        flag_manager = FlagManager()
        signal_processor = SignalProcessor()
        signal_validator = SignalValidator()
        signal_manager = SignalManager(
            processor=signal_processor,
            validator=signal_validator,
            flag_manager=flag_manager
        )
        
        monitor_widget = SignalMonitorWidget(signal_manager, flag_manager)
        monitor_widget.show()
        
        print("‚úÖ –í–∏–¥–∂–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª—ã
        test_signals = [
            ("TEMP", "temperature", "25.5"),
            ("STATUS", "device_status", "running"),
            ("ERROR", "error_code", "0")
        ]
        
        for signal_name, variable_name, value in test_signals:
            monitor_widget.add_log_entry(signal_name, variable_name, value)
            print(f"   ‚úÖ –õ–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω: {signal_name} -> {variable_name} = {value}")
            time.sleep(0.5)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
        start_time = time.time()
        while time.time() - start_time < 3:
            app.processEvents()
            time.sleep(0.1)
        
        print("‚úÖ –í–∏–¥–∂–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    main_test_success = test_signals_page_ui()
    
    # –¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_test_success = test_signal_config_widget()
    
    # –¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    monitor_test_success = test_signal_monitor_widget()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if main_test_success and config_test_success and monitor_test_success:
        print("\nüéâ –í—Å–µ UI —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ UI —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        sys.exit(1)
