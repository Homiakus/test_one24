"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—à–∏–≤–∫–∏
"""
from typing import Optional
from PyQt6.QtWidgets import (
    QVBoxLayout, QHBoxLayout, QLabel, QPushButton,
    QProgressBar, QFileDialog, QMessageBox, QGroupBox
)
from PyQt6.QtCore import pyqtSignal as Signal

from .base_page import BasePage
from ..widgets.modern_widgets import ModernCard, ModernButton


class FirmwarePage(BasePage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–∏–≤–∫–æ–π"""

    # –°–∏–≥–Ω–∞–ª—ã
    firmware_build_requested = Signal(str)  # project_path
    firmware_upload_requested = Signal(str)  # port
    firmware_clean_requested = Signal(str)  # project_path

    def __init__(self, project_path: str = None, parent=None):
        self.project_path = project_path or "arduino"
        super().__init__(parent)

    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(20)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("üîß –ü—Ä–æ—à–∏–≤–∫–∞")
        title.setObjectName("page_title")
        layout.addWidget(title)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
        self._create_info_card(layout)

        # –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–±–æ—Ä–∫–∏
        self._create_build_card(layout)

        # –ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        self._create_upload_card(layout)

        # –ö–∞—Ä—Ç–æ—á–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        self._create_clean_card(layout)

        # –û–±–ª–∞—Å—Ç—å –ª–æ–≥–æ–≤
        self._create_log_area(layout)

    def _create_info_card(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏"""
        card = ModernCard("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ")

        info_text = QLabel(
            f"<b>–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É:</b> {self.project_path}<br>"
            f"<b>–°—Ç–∞—Ç—É—Å:</b> –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ<br>"
            f"<b>PlatformIO:</b> –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—à–∏–≤–∫–æ–π"
        )
        info_text.setObjectName("info_text")
        card.addWidget(info_text)

        parent_layout.addWidget(card)

    def _create_build_card(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–±–æ—Ä–∫–∏"""
        card = ModernCard("üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏")

        layout = QVBoxLayout()

        # –ö–Ω–æ–ø–∫–∏ —Å–±–æ—Ä–∫–∏
        build_btn = ModernButton("üî® –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ—à–∏–≤–∫—É", "success")
        build_btn.clicked.connect(self._build_firmware)

        build_env_btn = ModernButton("üéØ –°–æ–±—Ä–∞—Ç—å –¥–ª—è —Å—Ä–µ–¥—ã", "primary")
        build_env_btn.clicked.connect(self._build_for_environment)

        buttons_layout = QHBoxLayout()
        buttons_layout.addWidget(build_btn)
        buttons_layout.addWidget(build_env_btn)

        layout.addLayout(buttons_layout)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.build_progress = QProgressBar()
        self.build_progress.setVisible(False)
        layout.addWidget(self.build_progress)

        card.addLayout(layout)
        parent_layout.addWidget(card)

    def _create_upload_card(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏"""
        card = ModernCard("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏")

        layout = QVBoxLayout()

        # –í—ã–±–æ—Ä –ø–æ—Ä—Ç–∞
        port_layout = QHBoxLayout()
        port_label = QLabel("–ü–æ—Ä—Ç:")
        self.port_combo = QComboBox()
        self.port_combo.addItems(["COM1", "COM2", "COM3", "COM4", "COM5"])
        self.port_combo.setCurrentText("COM3")

        port_layout.addWidget(port_label)
        port_layout.addWidget(self.port_combo)

        # –ö–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        upload_btn = ModernButton("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—à–∏–≤–∫—É", "success")
        upload_btn.clicked.connect(self._upload_firmware)

        upload_monitor_btn = ModernButton("üîç –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å", "warning")
        upload_monitor_btn.clicked.connect(self._upload_and_monitor)

        buttons_layout = QHBoxLayout()
        buttons_layout.addWidget(upload_btn)
        buttons_layout.addWidget(upload_monitor_btn)

        layout.addLayout(port_layout)
        layout.addLayout(buttons_layout)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.upload_progress = QProgressBar()
        self.upload_progress.setVisible(False)
        layout.addWidget(self.upload_progress)

        card.addLayout(layout)
        parent_layout.addWidget(card)

    def _create_clean_card(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—á–∏—Å—Ç–∫–∏"""
        card = ModernCard("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞")

        layout = QVBoxLayout()

        clean_btn = ModernButton("üßπ –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", "danger")
        clean_btn.clicked.connect(self._clean_project)

        clean_env_btn = ModernButton("üéØ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ä–µ–¥—É", "warning")
        clean_env_btn.clicked.connect(self._clean_environment)

        buttons_layout = QHBoxLayout()
        buttons_layout.addWidget(clean_btn)
        buttons_layout.addWidget(clean_env_btn)

        layout.addLayout(buttons_layout)

        card.addLayout(layout)
        parent_layout.addWidget(card)

    def _create_log_area(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –ª–æ–≥–æ–≤"""
        card = ModernCard("üìã –õ–æ–≥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π")

        self.log_area = QTextEdit()
        self.log_area.setReadOnly(True)
        self.log_area.setMaximumHeight(200)

        card.addWidget(self.log_area)
        parent_layout.addWidget(card)

    def _build_firmware(self):
        """–°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏"""
        self._show_progress(self.build_progress)
        self._add_log_entry("üî® –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏...")

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–±–æ—Ä–∫—É
        self.firmware_build_requested.emit(self.project_path)

    def _build_for_environment(self):
        """–°–±–æ—Ä–∫–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ä–µ–¥—ã"""
        # –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä —Å—Ä–µ–¥—ã
        self._build_firmware()

    def _upload_firmware(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏"""
        port = self.port_combo.currentText()

        self._show_progress(self.upload_progress)
        self._add_log_entry(f"üì§ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ –Ω–∞ –ø–æ—Ä—Ç {port}...")

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        self.firmware_upload_requested.emit(port)

    def _upload_and_monitor(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        self._upload_firmware()
        # –í –±—É–¥—É—â–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

    def _clean_project(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        self._add_log_entry("üßπ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...")

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—á–∏—Å—Ç–∫—É
        self.firmware_clean_requested.emit(self.project_path)

    def _clean_environment(self):
        """–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ä–µ–¥—ã"""
        self._clean_project()

    def _show_progress(self, progress_bar):
        """–ü–æ–∫–∞–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        progress_bar.setVisible(True)
        progress_bar.setRange(0, 0)  # –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å

    def _hide_progress(self, progress_bar):
        """–°–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        progress_bar.setVisible(False)

    def _add_log_entry(self, message: str):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥"""
        current_text = self.log_area.toPlainText()
        self.log_area.setPlainText(current_text + message + "\n")
        self.log_area.verticalScrollBar().setValue(
            self.log_area.verticalScrollBar().maximum()
        )

    def update_build_progress(self, current: int, total: int):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–±–æ—Ä–∫–∏"""
        self.build_progress.setRange(0, total)
        self.build_progress.setValue(current)

    def update_upload_progress(self, current: int, total: int):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏"""
        self.upload_progress.setRange(0, total)
        self.upload_progress.setValue(current)

    def on_build_finished(self, success: bool, message: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏"""
        self._hide_progress(self.build_progress)

        status = "‚úÖ" if success else "‚ùå"
        self._add_log_entry(f"{status} –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {message}")

        if success:
            self.status_message.emit("‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", 3000)
        else:
            self.status_message.emit("‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏", 5000)

    def on_upload_finished(self, success: bool, message: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏"""
        self._hide_progress(self.upload_progress)

        status = "‚úÖ" if success else "‚ùå"
        self._add_log_entry(f"{status} –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {message}")

        if success:
            self.status_message.emit("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", 3000)
        else:
            self.status_message.emit("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏", 5000)

    def on_clean_finished(self, success: bool, message: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏"""
        status = "‚úÖ" if success else "‚ùå"
        self._add_log_entry(f"{status} –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {message}")

        if success:
            self.status_message.emit("‚úÖ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", 3000)
        else:
            self.status_message.emit("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞", 5000)

    def refresh(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        # –û—á–∏—â–∞–µ–º –ª–æ–≥–∏
        self.log_area.clear()

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        self._hide_progress(self.build_progress)
        self._hide_progress(self.upload_progress)
