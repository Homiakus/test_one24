"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
"""
from typing import List, Dict
from PyQt6.QtWidgets import (
    QVBoxLayout, QHBoxLayout, QLabel, QPushButton,
    QGridLayout, QGroupBox, QTextEdit, QMessageBox
)
from PyQt6.QtCore import pyqtSignal as Signal, Qt

from .base_page import BasePage
from ..shared.utils import create_input_dialog, create_confirmation_dialog


class SequencesPage(BasePage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏"""

    # –°–∏–≥–Ω–∞–ª—ã
    sequence_selected = Signal(str)  # sequence_name
    sequence_execute_requested = Signal(str)  # sequence_name
    sequence_edited = Signal(str, list)  # sequence_name, commands

    def __init__(self, sequences_config: Dict[str, List[str]], parent=None):
        self.sequences_config = sequences_config or {}
        self.current_sequence = None
        super().__init__("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", parent)

    def _get_page_title(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        return "üìã –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"

    def _setup_additional_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ UI"""
        # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
        main_splitter = self.create_splitter(Qt.Orientation.Horizontal)
        self.content_layout.addWidget(main_splitter)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        left_widget = self._create_sequences_list()
        main_splitter.addWidget(left_widget)

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –¥–µ—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        right_widget = self._create_sequence_details()
        main_splitter.addWidget(right_widget)

        main_splitter.setSizes([300, 600])

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        self._create_action_buttons()

    def _create_sequences_list(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π"""
        card = self.create_card("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")

        layout = self.create_page_layout(margins=(10, 10, 10, 10), spacing=10)

        # –°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        self.sequences_list = QListWidget()
        self.sequences_list.itemClicked.connect(self._on_sequence_selected)
        layout.addWidget(self.sequences_list)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        self._refresh_sequences_list()

        card.addLayout(layout)
        return card

    def _create_sequence_details(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –¥–µ—Ç–∞–ª–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        card = self.create_card("–î–µ—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")

        layout = self.create_page_layout(margins=(10, 10, 10, 10), spacing=10)

        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        self.sequence_name_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
        self.sequence_name_label.setObjectName("sequence_name")
        layout.addWidget(self.sequence_name_label)

        # –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        self.commands_text = QTextEdit()
        self.commands_text.setReadOnly(True)
        self.commands_text.setMaximumHeight(200)
        layout.addWidget(self.commands_text)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_layout = self.create_horizontal_layout()

        self.execute_btn = self.create_button("‚ñ∂ –í—ã–ø–æ–ª–Ω–∏—Ç—å", "success")
        self.execute_btn.clicked.connect(self._execute_sequence)
        self.execute_btn.setEnabled(False)

        self.edit_btn = self.create_button("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "primary")
        self.edit_btn.clicked.connect(self._edit_sequence)
        self.edit_btn.setEnabled(False)

        buttons_layout.addWidget(self.execute_btn)
        buttons_layout.addWidget(self.edit_btn)

        layout.addLayout(buttons_layout)

        card.addLayout(layout)
        return card

    def _create_action_buttons(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π"""
        card = self.create_card("–î–µ–π—Å—Ç–≤–∏—è")
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        button_data = [
            {
                'text': '‚ûï –î–æ–±–∞–≤–∏—Ç—å',
                'type': 'success',
                'clicked': self._add_sequence
            },
            {
                'text': '‚ûñ –£–¥–∞–ª–∏—Ç—å',
                'type': 'danger',
                'clicked': self._remove_sequence
            },
            {
                'text': 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å',
                'type': 'secondary',
                'clicked': self._refresh_sequences_list
            }
        ]
        
        # –°–æ–∑–¥–∞–µ–º layout —Å –∫–Ω–æ–ø–∫–∞–º–∏
        buttons_layout = self.create_button_grid(button_data, max_cols=3, spacing=10)
        card.addLayout(buttons_layout)
        
        self.content_layout.addWidget(card)

    def _refresh_sequences_list(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π"""
        self.sequences_list.clear()

        for sequence_name in sorted(self.sequences_config.keys()):
            item = QListWidgetItem(sequence_name)
            item.setData(Qt.ItemDataRole.UserRole, sequence_name)
            self.sequences_list.addItem(item)

    def _on_sequence_selected(self, item):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        sequence_name = item.data(Qt.ItemDataRole.UserRole)
        self.current_sequence = sequence_name
        self.sequence_selected.emit(sequence_name)

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏
        self._update_sequence_details()

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        self.execute_btn.setEnabled(True)
        self.edit_btn.setEnabled(True)

    def _update_sequence_details(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        if not self.current_sequence:
            return

        sequence_name = self.current_sequence
        commands = self.sequences_config.get(sequence_name, [])

        self.sequence_name_label.setText(f"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {sequence_name}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
        commands_text = ""
        for i, cmd in enumerate(commands, 1):
            commands_text += f"{i}. {cmd}\n"

        self.commands_text.setPlainText(commands_text)

    def _execute_sequence(self):
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        if self.current_sequence:
            self.sequence_execute_requested.emit(self.current_sequence)
            self.show_status_message(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {self.current_sequence}")

    def _edit_sequence(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        if not self.current_sequence:
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã
        current_commands = self.sequences_config.get(self.current_sequence, [])

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
        ok, commands_text = create_input_dialog(
            "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ –æ–¥–Ω–æ–π –Ω–∞ —Å—Ç—Ä–æ–∫—É):",
            "\n".join(current_commands),
            self
        )

        if ok and commands_text:
            new_commands = [cmd.strip() for cmd in commands_text.split('\n') if cmd.strip()]

            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            self.sequences_config[self.current_sequence] = new_commands

            # –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
            self.sequence_edited.emit(self.current_sequence, new_commands)

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            self._update_sequence_details()
            
            self.show_status_message(f"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å '{self.current_sequence}' –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

    def _add_sequence(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        ok, sequence_name = create_input_dialog(
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:",
            "",
            self
        )

        if ok and sequence_name:
            sequence_name = sequence_name.strip()
            if sequence_name in self.sequences_config:
                self.show_error_message(f"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å '{sequence_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            self.sequences_config[sequence_name] = []
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            self._refresh_sequences_list()
            
            self.show_status_message(f"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å '{sequence_name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞")

    def _remove_sequence(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        if not self.current_sequence:
            self.show_error_message("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if create_confirmation_dialog(
            "–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
            f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å '{self.current_sequence}'?",
            self
        ):
            # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            del self.sequences_config[self.current_sequence]
            
            # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            self.current_sequence = None
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            self._refresh_sequences_list()
            self._update_sequence_details()
            
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
            self.execute_btn.setEnabled(False)
            self.edit_btn.setEnabled(False)
            
            self.show_status_message("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞")

    def refresh(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        self._refresh_sequences_list()
        self._update_sequence_details()
        super().refresh()
